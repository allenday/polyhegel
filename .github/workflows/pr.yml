name: Pull Request CI

on:
  pull_request:
    branches: [ main, dev ]

env:
  PYTHONPATH: ${{ github.workspace }}
  PYTEST_ADDOPTS: "-v --tb=short"

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run linting
      run: make lint
    
    - name: Run type checking
      run: make typecheck

  adaptive-tests:
    runs-on: ubuntu-latest
    needs: quality-checks
    env:
      # Only set API keys for PRs to main that need integration tests
      OPENAI_API_KEY: ${{ github.base_ref == 'main' && secrets.OPENAI_API_KEY || '' }}
      ANTHROPIC_API_KEY: ${{ github.base_ref == 'main' && secrets.ANTHROPIC_API_KEY || '' }}
      LANGSMITH_API_KEY: ${{ github.base_ref == 'main' && secrets.LANGSMITH_API_KEY || '' }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run appropriate tests based on target branch
      run: |
        if [[ "${{ github.base_ref }}" == "main" ]]; then
          echo "🎯 PR targeting main - running full test suite"
          make test-all
        else
          echo "🚀 PR targeting dev - running unit tests only"
          make test-no-llm
        fi

  security-check:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install safety bandit pip-audit
    
    - name: Run security checks
      run: |
        echo "🔍 Running security scans..."
        pip-audit --format=text || echo "⚠️  pip-audit found issues"
        bandit -r polyhegel || echo "⚠️  bandit found issues"
        safety check || echo "⚠️  safety found issues"

  docs-check:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Verify documentation builds
      run: make docs

  pr-summary:
    runs-on: ubuntu-latest
    needs: [quality-checks, adaptive-tests, security-check, docs-check]
    if: always()
    steps:
    - name: PR Summary
      run: |
        echo "## 📋 PR Check Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Quality Checks: ${{ needs.quality-checks.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tests: ${{ needs.adaptive-tests.result }}" >> $GITHUB_STEP_SUMMARY  
        echo "- Security: ${{ needs.security-check.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Docs: ${{ needs.docs-check.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ github.base_ref }}" == "main" ]]; then
          echo "🎯 **Target**: main (full test suite)" >> $GITHUB_STEP_SUMMARY
        else
          echo "🚀 **Target**: dev (unit tests only)" >> $GITHUB_STEP_SUMMARY
        fi